<?xml version="1.0" encoding="UTF-8"?>
	<article> 
	<title>Bellman Ford</title>
	<description>The Bellman�Ford algorithm is an algorithm that computes shortest paths from a single source vertex to all of the other vertices in a weighted digraph.It is slower than Dijkstra's algorithm for the same problem, but more versatile, as it is capable of handling graphs in which some of the edge weights are negative numbers.</description>
	<algo-description-pre>Like Dijkstra's algorithm, Bellman�Ford proceeds by relaxation, in which approximations to the correct distance are replaced by better ones until they eventually reach the solution. In both algorithms, the approximate distance to each vertex is always an overestimate of the true distance, and is replaced by the minimum of its old value and the length of a newly found path. However, Dijkstra's algorithm uses a priority queue to greedily select the closest vertex that has not yet been processed, and performs this relaxation process on all of its outgoing edges; by contrast, the Bellman�Ford algorithm simply relaxes all the edges, and does thise |V|-1 times, where |V| is the number of vertices in the graph. In each of these repetitions, the number of vertices with correctly calculated distances grows, from which it follows that eventually all vertices will have their correct distances. This method allows the Bellman�Ford algorithm to be applied to a wider class of inputs than Dijkstra.</algo-description-pre>
	<application>			<app>A distributed variant of the Bellman�Ford algorithm is used in distance-vector routing protocols, for example the Routing Information Protocol (RIP)</app></application>
	<author>Rachana Jayaram</author>
	<author-link>http://rachanajayaram.github.io/projects</author-link>
	
</article>